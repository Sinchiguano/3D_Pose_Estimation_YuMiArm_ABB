// Generated by gencpp from file autolab_core/RigidTransformListener.msg
// DO NOT EDIT!


#ifndef AUTOLAB_CORE_MESSAGE_RIGIDTRANSFORMLISTENER_H
#define AUTOLAB_CORE_MESSAGE_RIGIDTRANSFORMLISTENER_H

#include <ros/service_traits.h>


#include <autolab_core/RigidTransformListenerRequest.h>
#include <autolab_core/RigidTransformListenerResponse.h>


namespace autolab_core
{

struct RigidTransformListener
{

typedef RigidTransformListenerRequest Request;
typedef RigidTransformListenerResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RigidTransformListener
} // namespace autolab_core


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::autolab_core::RigidTransformListener > {
  static const char* value()
  {
    return "1b358ad3ddaa046f03b607401db493d6";
  }

  static const char* value(const ::autolab_core::RigidTransformListener&) { return value(); }
};

template<>
struct DataType< ::autolab_core::RigidTransformListener > {
  static const char* value()
  {
    return "autolab_core/RigidTransformListener";
  }

  static const char* value(const ::autolab_core::RigidTransformListener&) { return value(); }
};


// service_traits::MD5Sum< ::autolab_core::RigidTransformListenerRequest> should match 
// service_traits::MD5Sum< ::autolab_core::RigidTransformListener > 
template<>
struct MD5Sum< ::autolab_core::RigidTransformListenerRequest>
{
  static const char* value()
  {
    return MD5Sum< ::autolab_core::RigidTransformListener >::value();
  }
  static const char* value(const ::autolab_core::RigidTransformListenerRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::autolab_core::RigidTransformListenerRequest> should match 
// service_traits::DataType< ::autolab_core::RigidTransformListener > 
template<>
struct DataType< ::autolab_core::RigidTransformListenerRequest>
{
  static const char* value()
  {
    return DataType< ::autolab_core::RigidTransformListener >::value();
  }
  static const char* value(const ::autolab_core::RigidTransformListenerRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::autolab_core::RigidTransformListenerResponse> should match 
// service_traits::MD5Sum< ::autolab_core::RigidTransformListener > 
template<>
struct MD5Sum< ::autolab_core::RigidTransformListenerResponse>
{
  static const char* value()
  {
    return MD5Sum< ::autolab_core::RigidTransformListener >::value();
  }
  static const char* value(const ::autolab_core::RigidTransformListenerResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::autolab_core::RigidTransformListenerResponse> should match 
// service_traits::DataType< ::autolab_core::RigidTransformListener > 
template<>
struct DataType< ::autolab_core::RigidTransformListenerResponse>
{
  static const char* value()
  {
    return DataType< ::autolab_core::RigidTransformListener >::value();
  }
  static const char* value(const ::autolab_core::RigidTransformListenerResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // AUTOLAB_CORE_MESSAGE_RIGIDTRANSFORMLISTENER_H
