// Generated by gencpp from file autolab_core/RigidTransformPublisher.msg
// DO NOT EDIT!


#ifndef AUTOLAB_CORE_MESSAGE_RIGIDTRANSFORMPUBLISHER_H
#define AUTOLAB_CORE_MESSAGE_RIGIDTRANSFORMPUBLISHER_H

#include <ros/service_traits.h>


#include <autolab_core/RigidTransformPublisherRequest.h>
#include <autolab_core/RigidTransformPublisherResponse.h>


namespace autolab_core
{

struct RigidTransformPublisher
{

typedef RigidTransformPublisherRequest Request;
typedef RigidTransformPublisherResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RigidTransformPublisher
} // namespace autolab_core


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::autolab_core::RigidTransformPublisher > {
  static const char* value()
  {
    return "2414e9e80f6a0faf446e445b137fbf6c";
  }

  static const char* value(const ::autolab_core::RigidTransformPublisher&) { return value(); }
};

template<>
struct DataType< ::autolab_core::RigidTransformPublisher > {
  static const char* value()
  {
    return "autolab_core/RigidTransformPublisher";
  }

  static const char* value(const ::autolab_core::RigidTransformPublisher&) { return value(); }
};


// service_traits::MD5Sum< ::autolab_core::RigidTransformPublisherRequest> should match 
// service_traits::MD5Sum< ::autolab_core::RigidTransformPublisher > 
template<>
struct MD5Sum< ::autolab_core::RigidTransformPublisherRequest>
{
  static const char* value()
  {
    return MD5Sum< ::autolab_core::RigidTransformPublisher >::value();
  }
  static const char* value(const ::autolab_core::RigidTransformPublisherRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::autolab_core::RigidTransformPublisherRequest> should match 
// service_traits::DataType< ::autolab_core::RigidTransformPublisher > 
template<>
struct DataType< ::autolab_core::RigidTransformPublisherRequest>
{
  static const char* value()
  {
    return DataType< ::autolab_core::RigidTransformPublisher >::value();
  }
  static const char* value(const ::autolab_core::RigidTransformPublisherRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::autolab_core::RigidTransformPublisherResponse> should match 
// service_traits::MD5Sum< ::autolab_core::RigidTransformPublisher > 
template<>
struct MD5Sum< ::autolab_core::RigidTransformPublisherResponse>
{
  static const char* value()
  {
    return MD5Sum< ::autolab_core::RigidTransformPublisher >::value();
  }
  static const char* value(const ::autolab_core::RigidTransformPublisherResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::autolab_core::RigidTransformPublisherResponse> should match 
// service_traits::DataType< ::autolab_core::RigidTransformPublisher > 
template<>
struct DataType< ::autolab_core::RigidTransformPublisherResponse>
{
  static const char* value()
  {
    return DataType< ::autolab_core::RigidTransformPublisher >::value();
  }
  static const char* value(const ::autolab_core::RigidTransformPublisherResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // AUTOLAB_CORE_MESSAGE_RIGIDTRANSFORMPUBLISHER_H
